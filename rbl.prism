mdp

global pos : int init 0;//0 is starting position
global s : int init 0;

global reward_pos : int init 2; //temporary TODO add mPFC model

const int maxstr;

const int reward_reset_step;


global HCtoOFC1key : int init 0;
global HCtoOFC2key : int init 0;
global HCtoOFC3key : int init 0;


const rewardwait_threshold;
const ofc_connect_threshold;
const ofc_move_threshold;





module agentMotor






[] (HCtoOFC1>=ofc_move_threshold & HCtoOFC1>HCtoOFC2 & HCtoOFC1>HCtoOFC3)->(pos' = 1);
[] (HCtoOFC2>=ofc_move_threshold & HCtoOFC2>HCtoOFC1 & HCtoOFC2>HCtoOFC3)->(pos' = 2);
[] (HCtoOFC3>=ofc_move_threshold & HCtoOFC3>HCtoOFC1 & HCtoOFC3>HCtoOFC2)->(pos' = 3);
[] (HCtoOFC1<ofc_move_threshold & HCtoOFC2<ofc_move_threshold & HCtoOFC3<ofc_move_threshold | HCtoOFC1=HCtoOFC2 & HCtoOFC1=HCtoOFC3)-> 1/3 : (pos'=1) + 1/3 : (pos'=2) + 1/3 : (pos'=3);
[] (pos = reward_pos)->(pos' = 0);

[] (s=reward_reset_step) -> 1/3 :(reward_pos'=1) + 1/3 :(reward_pos'=2) + 1/3 :(reward_pos'=3);

endmodule


module OFC



[] (DRNtoOFC = 3 & HCtoOFC1key < 2 & HC=1 ) -> (HCtoOFC1key' = HCtoOFC1key + 1) & (pos'=0) & (s'=s+1);
[] (DRNtoOFC = 3  & HCtoOFC2key < 2 & HC=2 ) -> (HCtoOFC2key' = HCtoOFC2key + 1) & (pos'=0) & (s'=s+1);
[] (DRNtoOFC = 3  & HCtoOFC3key < 2 & HC=3 ) -> (HCtoOFC3key' = HCtoOFC3key + 1) & (pos'=0) & (s'=s+1); //must reset position from here :(



[] (DRNtoOFC = 1  & HCtoOFC1key > 0 & HC=1  ) -> (HCtoOFC1key' = HCtoOFC1key - 1) & (pos'=0) & (s'=s+1);
[] (DRNtoOFC = 1  & HCtoOFC2key > 0 & HC=2  ) -> (HCtoOFC2key' = HCtoOFC2key - 1) & (pos'=0) & (s'=s+1);
[] (DRNtoOFC = 1  & HCtoOFC3key > 0 & HC=3  ) -> (HCtoOFC3key' = HCtoOFC3key - 1) & (pos'=0) & (s'=s+1); //must reset position from here :(



//choose weight function hypothesis non deterministically; resolve for max P of success

endmodule


formula HC = (pos=1?1:(pos=2?2:pos=3?3:0));
formula DRNtoOFC = (LH=1?3:(LH=0?1:1));
//TODO formula DRN to mPFC
formula LH = (pos=reward_pos?1:0);

formula HCtoOFC1 = HCtoOFC1key=0?10:(HCtoOFC1key=1?30:(HCtoOFC1key=2?90:(HCtoOFC1key=2?200:0)));
formula HCtoOFC2 = HCtoOFC2key=0?10:(HCtoOFC2key=1?30:(HCtoOFC2key=2?90:(HCtoOFC2key=2?200:0)));
formula HCtoOFC3 = HCtoOFC3key=0?10:(HCtoOFC3key=1?30:(HCtoOFC3key=2?90:(HCtoOFC3key=2?200:0)));




